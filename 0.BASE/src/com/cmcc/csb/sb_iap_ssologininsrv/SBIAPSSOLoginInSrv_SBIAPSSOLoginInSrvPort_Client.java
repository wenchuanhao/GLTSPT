
package com.cmcc.csb.sb_iap_ssologininsrv;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

import bsh.This;

import com.cmcc.JaxbParseBase;
import com.cmcc.ServiceConfig;
import com.cmcc.mss.msgheader.MsgHeader;

/**
 * This class was generated by Apache CXF 2.7.18
 * 2016-05-17T15:10:41.226+08:00
 * Generated source version: 2.7.18
 * 
 */
public final class SBIAPSSOLoginInSrv_SBIAPSSOLoginInSrvPort_Client{

    private static final QName SERVICE_NAME = new QName("http://csb.cmcc.com/SB_IAP_SSOLoginInSrv", "SB_IAP_SSOLoginInSrv");

    private SBIAPSSOLoginInSrv_SBIAPSSOLoginInSrvPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = SBIAPSSOLoginInSrv_Service.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        SBIAPSSOLoginInSrv_Service ss = new SBIAPSSOLoginInSrv_Service(wsdlURL, SERVICE_NAME);
        SBIAPSSOLoginInSrv port = ss.getSBIAPSSOLoginInSrvPort();  
        
        {
        System.out.println("Invoking process...");
        com.cmcc.csb.sb_iap_ssologininsrv.SBIAPSSOLoginInSrvRequest _process_payload = new SBIAPSSOLoginInSrvRequest();
        MsgHeader msgHeader=_process_payload.getMsgHeader();
        if(null==msgHeader.getSOURCESYSTEMID()||msgHeader.getSOURCESYSTEMID().trim().equals("")){
    		msgHeader.setSOURCESYSTEMID(ServiceConfig.sourcesystemid);
    	}
    	if(null==msgHeader.getSOURCESYSTEMNAME()||msgHeader.getSOURCESYSTEMNAME().trim().equals("")){
    		msgHeader.setSOURCESYSTEMNAME(ServiceConfig.sourcesystemname);
    	}
    	if(null==msgHeader.getSUBMITDATE()){
    		msgHeader.setSUBMITDATE(ServiceConfig.submitdate);
    	}
    	if(null==msgHeader.getPAGESIZE()){
    		msgHeader.setPAGESIZE(ServiceConfig.pagesize);
    	}
    	if(null==msgHeader.getCURRENTPAGE()){
    		msgHeader.setCURRENTPAGE(ServiceConfig.currentpage);
    	}
    	if(null==msgHeader.getTOTALRECORD()){
    		msgHeader.setTOTALRECORD(ServiceConfig.totalrecord);
    	}
    	if(null==msgHeader.getPROVINCECODE()||msgHeader.getPROVINCECODE().trim().equals("")){
    		msgHeader.setPROVINCECODE(ServiceConfig.provincecode);
    	}
    	if(null==msgHeader.getENVIRONMENTNAME()||msgHeader.getENVIRONMENTNAME().trim().equals("")){
    		msgHeader.setENVIRONMENTNAME(ServiceConfig.environmentname);
    	}
    	if(null==msgHeader.getUSERID()||msgHeader.getUSERID().trim().equals("")){
    		msgHeader.setUSERID(ServiceConfig.userid);
    	}
    	if(null==msgHeader.getUSERNAME()||msgHeader.getUSERNAME().trim().equals("")){
    		msgHeader.setUSERNAME(ServiceConfig.username);
    	}
    	_process_payload.setMsgHeader(msgHeader);
        /*msgHeader=SBIAPSSOLoginInSrv_SBIAPSSOLoginInSrvPort_Client
        		initMsgHeader(msgHeader);
		sBIAPSSOLoginInSrvRequest.setMsgHeader(msgHeader);*/
       /* MsgHeader msgHeader=sBIAPSSOLoginInSrvRequest.getMsgHeader();
		msgHeader=initMsgHeader(msgHeader);
		sBIAPSSOLoginInSrvRequest.setMsgHeader(msgHeader);*/
        com.cmcc.csb.sb_iap_ssologininsrv.SBIAPSSOLoginInSrvResponse _process__return = port.process(null);
        System.out.println("process.result=" + _process__return);


        }

        System.exit(0);
    }
    
   

}
